import { z } from 'zod';
import type { AppRouter } from '@ts-rest/core';

{{#if imports}}
  {{#each imports}}
    import { {{{@key}}} } from "./{{{this}}}"
  {{/each}}
{{/if}}

{{#if schemas}}
  {{#each schemas}}
    export const {{@key}} = {{{this}}};
  {{/each}}
{{/if}}

export const appRouter = {
{{#each endpoints}}
  {{alias}}: {
    method: '{{toUpperCase method}}' as const,
    path: "{{path}}",
    {{#if description}}
    description: `{{description}}`,
    {{/if}}
    {{#if parameters}}
    {{#includesType parameters "Path"}}
    pathParams: z.object({
      {{#each parameters}}{{#ifeq type "Path"}}'{{name}}': {{{schema}}},{{/ifeq}}{{/each}}
    }),
    {{/includesType}}
    {{#includesType parameters "Query"}}
    query: z.object({
      {{#each parameters}}{{#ifeq type "Query"}}'{{name}}': {{{schema}}},{{/ifeq}}{{/each}}
    }),
    {{/includesType}}
    {{#includesType parameters "Body"}}
    body: {{#each parameters}}{{#ifeq type "Body"}}{{{schema}}}{{/ifeq}}{{/each}},
    {{/includesType}}
    {{/if}}
    responses: {
    {{#each responses}}
      [{{statusCode}}]: {{{schema}}},
    {{/each}}
    },
  },
{{/each}}
} satisfies AppRouter;

export const ApiOperations = {
{{#each endpoints}}
  '{{toPlainWords alias}}': '{{alias}}',
{{/each}}
} satisfies Record<string, keyof typeof appRouter>;
